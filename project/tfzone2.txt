data.terraform_remote_state.vpc: Reading...
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Refreshing state... [id=app-udacity-eks-node-role-20240908120206595800000004]
data.aws_iam_role.eks_cluster_role: Reading...
module.project_eks.data.aws_iam_policy_document.eks_node_assume_role_policy: Reading...
data.aws_caller_identity.current: Reading...
data.aws_ami.amazon_linux_2: Reading...
data.aws_iam_policy.cloudwatch-policy: Reading...
data.aws_iam_policy.instance-policy: Reading...
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Refreshing state... [id=app-udacity-eks-node-role-20240908120206639200000007]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Refreshing state... [id=app-udacity-eks-cluster-role-20240908120206604300000006]
module.project_eks.data.aws_iam_policy_document.eks_node_assume_role_policy: Read complete after 0s [id=2851119427]
data.aws_iam_role.eks_node_role: Reading...
data.aws_caller_identity.current: Read complete after 0s [id=379939704263]
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Refreshing state... [id=app-udacity-eks-node-role-20240908120206597700000005]
data.terraform_remote_state.vpc: Read complete after 1s
module.project_eks.data.aws_iam_policy_document.eks_assume_role_policy: Reading...
module.project_eks.data.aws_iam_policy_document.eks_assume_role_policy: Read complete after 0s [id=3552664922]
module.project_eks.aws_iam_role_policy_attachment.node_CloudWatchAgentServerPolicy: Refreshing state... [id=app-udacity-eks-node-role-20240908120206582200000002]
data.aws_iam_role.eks_node_role: Read complete after 1s [id=app-udacity-eks-node-role]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy: Refreshing state... [id=app-udacity-eks-cluster-role-20240908120206568200000001]
module.project_alb.aws_lb_target_group.udacity: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-1:379939704263:targetgroup/udacity-lb-tg/075f5faf887a0f67]
module.project_eks.aws_security_group.eks-cluster: Refreshing state... [id=sg-022318eef28280f2b]
data.aws_iam_role.eks_cluster_role: Read complete after 1s [id=app-udacity-eks-cluster-role]
module.project_ec2.aws_security_group.ec2_sg: Refreshing state... [id=sg-0af84382f8f8613d2]
data.aws_ami.amazon_linux_2: Read complete after 1s [id=ami-0fc91dd8c944575e1]
module.project_eks.aws_eks_cluster.cluster: Refreshing state... [id=udacity-cluster]
module.project_alb.aws_lb.udacity: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-1:379939704263:loadbalancer/app/udacity-lb-tf/c5c0aa473f1197d3]
module.project_ec2.aws_instance.ubuntu[1]: Refreshing state... [id=i-0543634a96904f0b5]
module.project_ec2.aws_instance.ubuntu[2]: Refreshing state... [id=i-0e407a9534cb86f33]
module.project_ec2.aws_instance.ubuntu[0]: Refreshing state... [id=i-0233bc31bfcdeda2b]
data.aws_eks_cluster_auth.cluster: Reading...
data.aws_eks_cluster.cluster: Reading...
data.aws_eks_cluster_auth.cluster: Read complete after 0s [id=udacity-cluster]
module.project_alb.aws_lb_listener.udacity: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-1:379939704263:listener/app/udacity-lb-tf/c5c0aa473f1197d3/94974f41ea3fd36b]
data.aws_eks_cluster.cluster: Read complete after 1s [id=udacity-cluster]
data.aws_iam_policy.instance-policy: Read complete after 3s [id=arn:aws:iam::379939704263:policy/app-udacity-instance-policy]
module.project_eks.aws_iam_role_policy_attachment.node_harmony_policy_attachment: Refreshing state... [id=app-udacity-eks-node-role-20240908120206590000000003]
data.aws_iam_policy.cloudwatch-policy: Read complete after 3s [id=arn:aws:iam::379939704263:policy/app-udacity-eks-cluster-role-cloudwatch-policy]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSCloudwatchPolicy: Refreshing state... [id=app-udacity-eks-node-role-20240908120206910600000008]
module.project_eks.aws_eks_node_group.node: Refreshing state... [id=udacity-cluster:app-udacity-node-group]
kubernetes_namespace.udacity: Refreshing state... [id=udacity]
module.project_alb.aws_lb_target_group_attachment.udacity[1]: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-1:379939704263:targetgroup/udacity-lb-tg/075f5faf887a0f67-20240908120650876400000005]
module.project_alb.aws_lb_target_group_attachment.udacity[0]: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-1:379939704263:targetgroup/udacity-lb-tg/075f5faf887a0f67-20240908120650431300000004]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # kubernetes_service.grafana-external will be created
  + resource "kubernetes_service" "grafana-external" {
      + id                     = (known after apply)
      + status                 = (known after apply)
      + wait_for_load_balancer = true

      + metadata {
          + annotations      = {
              + "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type" = "ip"
              + "service.beta.kubernetes.io/aws-load-balancer-type"            = "nlb"
            }
          + generation       = (known after apply)
          + name             = "grafana-external"
          + namespace        = "monitoring"
          + resource_version = (known after apply)
          + uid              = (known after apply)
        }

      + spec {
          + allocate_load_balancer_node_ports = true
          + cluster_ip                        = (known after apply)
          + cluster_ips                       = (known after apply)
          + external_traffic_policy           = (known after apply)
          + health_check_node_port            = (known after apply)
          + internal_traffic_policy           = (known after apply)
          + ip_families                       = (known after apply)
          + ip_family_policy                  = (known after apply)
          + publish_not_ready_addresses       = false
          + selector                          = {
              + "app.kubernetes.io/name" = "grafana"
            }
          + session_affinity                  = "None"
          + type                              = "LoadBalancer"

          + port {
              + node_port   = (known after apply)
              + port        = 80
              + protocol    = "TCP"
              + target_port = "3000"
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.
kubernetes_service.grafana-external: Creating...
kubernetes_service.grafana-external: Creation complete after 5s [id=monitoring/grafana-external]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "379939704263"
caller_arn = "arn:aws:iam::379939704263:user/sre"
caller_user = "AIDAVQ5RLZXD4XDS75D7A"